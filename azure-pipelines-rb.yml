# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master

variables:
  azureSubscriptionEndpoint: spectacular-azurerm
  dockerRegistryServiceConnection: 'b49e6e37-26c8-421e-ac20-c8ea6239311e'
  containerRegistry: 'spectacular.azurecr.io'
  imagePullSecret: 'spectacular-auth'
  manifestArtifactName: 'backend-manifests'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
# - stage: Build
#   displayName: Build, unit test and push images
#   jobs:  
#   - job: BuildBackend
#     displayName: Build Backend Service
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: test-candidate/backend
#         dockerfile: 'github-service/Dockerfile'
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: $(tag)
#   - job: BuildWeb
#     displayName: Build Web App
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: test-candidate/web
#         dockerfile: 'ui/Dockerfile'
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: $(tag)

- stage: IntegrationTesting
  displayName: Integration Testing
  jobs:  
  - job: E2EUITests
    displayName: End to End UI Tests
    variables:
      - group: docker-compose-variables
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadSecureFile@1
      displayName: Download GitHub App Signing Key
      name: githubAppSigningKey
      inputs:
        secureFile: 'spectacular-dev-app.2020-01-26.private-key.pem'
    - task: DockerCompose@0
      displayName: Run services
      env:
        SPECTACULAR_JWT_SHARED_SECRET: $(SPECTACULAR_JWT_SHARED_SECRET)
        SPECTACULAR_GITHUB_APP_PRIVATE_KEY_FILE_PATH: $(githubAppSigningKey.secureFilePath)
      inputs:
        action: Run services
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(containerRegistry)
        dockerComposeFile: ./integration-tests/docker-compose.ui-e2e.yml
        projectName: spectacular
        buildImages: false
        abortOnContainerExit: true
        detached: true
    - bash: docker ps
      displayName: List container
    - task: DockerCompose@0
      displayName: Print Docker Compose logs
      condition: always()
      env:
        SPECTACULAR_JWT_SHARED_SECRET: $(SPECTACULAR_JWT_SHARED_SECRET)
        SPECTACULAR_GITHUB_APP_PRIVATE_KEY_FILE_PATH: $(githubAppSigningKey.secureFilePath)
      inputs:
        action: Run a Docker Compose command
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(containerRegistry)
        dockerComposeFile: ./integration-tests/docker-compose.ui-e2e.yml
        projectName: spectacular
        dockerComposeCommand: logs
