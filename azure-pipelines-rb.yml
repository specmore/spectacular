# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master

variables:
  azureSubscriptionEndpoint: spectacular-azurerm
  dockerRegistryServiceConnection: 'b49e6e37-26c8-421e-ac20-c8ea6239311e'
  containerRegistry: 'spectacular.azurecr.io'
  imagePullSecret: 'spectacular-auth'
  manifestArtifactName: 'backend-manifests'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

# resources:
#   containers:
#   - container: wiremock
#     image: rodolpheche/wiremock
#     ports:
#     - 8080
#     volumes:
#     # - '$(Build.SourcesDirectory)/integration-tests/github-mock/test:/home/wiremock'
#     - 'integration-tests/github-mock/test:/home/wiremock'

stages:
# - stage: Build
#   displayName: Build, unit test and push images
#   jobs:  
#   - job: BuildBackend
#     displayName: Build Backend Service
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: test-candidate/backend
#         dockerfile: 'github-service/Dockerfile'
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: $(tag)
#   - job: BuildWeb
#     displayName: Build Web App
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: test-candidate/web
#         dockerfile: 'ui/Dockerfile'
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: $(tag)

- stage: IntegrationTesting
  displayName: Integration Testing
  jobs:  
  - job: E2EUITests
    displayName: End to End UI Tests
    pool:
      vmImage: $(vmImageName)
    services:
      github-mock:
        image: rodolpheche/wiremock
        ports:
        - 8080
        volumes:
        - '$(Build.SourcesDirectory)/integration-tests/github-mock/test:/home/wiremock'
    steps:
    - bash: docker ps
      displayName: List container
