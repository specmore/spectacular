openapi: 3.0.0
info:
  title: Spectacular Backend API
  description: The RESTful API for the Spectacular tool's Backend Service.
  version: 0.1.0
paths:
  /installation:
    get:
      tags:
        - Installation
      description: Gets the details of this installation of the Spectacular app
      operationId: getInstallation
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Installation'
  /catalogues:
    get:
      tags:
        - Catalogues
      description: Finds catalogues available to the user
      operationId: findCataloguesForUser
      parameters:
        - name: org
          in: query
          description: The organisation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindCataloguesResult'
  /catalogues/{encodedId}:
    get:
      tags:
        - Catalogues
      description: Gets a catalogue
      operationId: getCatalogue
      parameters:
        - name: encodedId
          in: path
          description: The base64 encoded id of the Catalogue being fetched
          required: true
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogueResult'
  /catalogues/{encodedId}/interfaces/{interfaceName}/spec-evolution:
    get:
      tags:
        - Interfaces
      description: Gets the evolution for the specification file of an interface
      operationId: getInterfaceSpecEvolution
      parameters:
        - name: encodedId
          in: path
          description: The base64 encoded id of the Catalogue being referenced
          required: true
          schema:
            type: string
            format: byte
        - name: interfaceName
          in: path
          description: The name of the Interface in the Catalogue being referenced
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSpecEvolutionResult'
  /catalogues/{encodedId}/interfaces/{interfaceName}/file:
    get:
      tags:
        - Interfaces
      description: Gets the file contents of an interface
      operationId: getInterfaceFileContents
      parameters:
        - name: encodedId
          in: path
          description: The base64 encoded id of the Catalogue being referenced
          required: true
          schema:
            type: string
            format: byte
        - name: interfaceName
          in: path
          description: The name of the Interface in the Catalogue being referenced
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The branch or tag ref to take the interface from
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/*:
              schema:
                type: object
            text/plain:
              schema:
                type: object
components:
  schemas:
    Installation:
      type: object
      properties:
        id:
          type: integer
        owner:
          type: string
      required:
        - id
    FindCataloguesResult:
      type: object
      properties:
        catalogues:
          type: array
          items:
            $ref: '#/components/schemas/Catalogue'
      required:
        - catalogues
    GetCatalogueResult:
      type: object
      properties:
        catalogue:
            $ref: '#/components/schemas/Catalogue'
      required:
        - catalogue
    Catalogue:
      type: object
      properties:
        fullPath:
          type: string
        name:
          type: string
        encodedId:
          type: string
          format: byte
        htmlUrl:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        parseError:
          type: string
        interfaceCount:
          type: integer
        specLogs:
          type: array
          items:
            $ref: '#/components/schemas/SpecLog'
      required:
        - fullPath
        - name
      x-keys:
        - fullPath
        - name
    SpecLog:
      type: object
      properties:
        interfaceName:
          type: string
        latestAgreed:
          $ref: '#/components/schemas/SpecItem'
        proposedChanges:
          type: array
          items:
            $ref: '#/components/schemas/ChangeProposal'
      required:
        - id
        - latestAgreed
        - proposedChanges
    ChangeProposal:
      type: object
      properties:
        id:
          type: integer
        pullRequest:
          $ref: '#/components/schemas/PullRequest'
        specItem:
          $ref: '#/components/schemas/SpecItem'
      required:
        - id
        - pullRequest
        - specItem
    GetSpecEvolutionResult:
      type: object
      properties:
        specEvolution:
            $ref: '#/components/schemas/SpecEvolution'
      required:
        - specEvolution
    SpecEvolution:
      type: object
      properties:
        interfaceName:
          type: string
        configUsed:
          type: object
        main:
          $ref: '#/components/schemas/EvolutionBranch'
        releases:
          type: array
          items:
            $ref: '#/components/schemas/EvolutionBranch'
      required:
        - interfaceName
        - main
        - releases
    EvolutionBranch:
      type: object
      properties:
        branchName:
          type: string
        evolutionItems:
          type: array
          items:
            $ref: '#/components/schemas/EvolutionItem'
      required:
        - branchName
        - evolutionItems
    EvolutionItem:
      type: object
      properties:
        ref:
          type: string
        tags:
          description: The associated to this commit.
          type: array
          items:
            type: string
        branchName:
          type: string
          description: If the evolution item represents the head of a branch, the name of the branch is returned.
        pullRequest:
          $ref: '#/components/schemas/PullRequest'
      required:
        - ref
    SpecItem:
      type: object
      properties:
        id:
          type: string
        fullPath:
          type: string
        htmlUrl:
          type: string
          format: uri
        ref:
          type: string
        sha:
          type: string
        lastModified:
          type: string
          format: date-time
        parseResult:
          $ref: '#/components/schemas/OpenApiSpecParseResult'
      required:
        - id
        - fullPath
        - ref
    OpenApiSpecParseResult:
      type: object
      properties:
        openApiSpec:
          $ref: '#/components/schemas/OpenApiSpec'
        errors:
          type: array
          items:
            type: string
      required:
        - openApiSpec
        - errors
    OpenApiSpec:
      type: object
      properties:
        title:
          type: string
        version:
          type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiOperation'
      required:
        - title
        - version
        - operations
    OpenApiOperation:
      type: object
      properties:
        path:
          type: string
        name:
          type: string
      required:
        - path
        - name
    PullRequest:
      type: object
      properties:
        number:
          type: integer
        url:
          type: string
          format: uri
        title:
          type: string
        branchName:
          type: string
        updatedAt:
          type: string
          format: date-time
        labels:
          type: array
          items:
            type: string
      required:
        - number
        - branchName
