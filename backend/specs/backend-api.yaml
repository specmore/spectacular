openapi: 3.0.0
info:
  title: Spectacular Backend API
  description: The RESTful API for the Spectacular tool's Backend Service.
  version: 0.1.0
paths:
  /app:
    get:
      tags:
        - App
      description: Gets the details of the Spectacular app registration
      operationId: getAppDetails
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppDetails'
  /app/login:
    post:
      tags:
        - App User
      description: Creates a spectacular user session from a temporary code provided by GitHub after a user completed an OAuth web flow against the Spectacular app registration
      operationId: createUserSession
      requestBody:
        description: The user authentication parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppLoginRequest'
      responses:
        '200':
          description: Successful operation
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: jwt_token=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
    delete:
      tags:
        - App User
      description: Logs any current Spectacular user out by delete their user session.
      operationId: deleteUserSession
      responses:
        '204':
          description: Successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: jwt_token=abcde12345; Path=/; HttpOnly
  /app/user:
    get:
      tags:
        - App User
      description: Gets the details of the currently logged in user
      operationId: getUserDetails
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
  /app/installations:
    get:
      tags:
        - App
      description: Gets the installations accessible to the currently logged in user
      operationId: getInstallations
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstallationsResult'
  /app/installations/{installationId}:
    get:
      tags:
        - App
      description: Gets the details of a specific installation of the Spectacular app
      operationId: getInstallation
      parameters:
        - name: installationId
          in: path
          description: The id of the specific installation of the Spectacular app
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Installation'
  /catalogues/{installationId}:
    get:
      tags:
        - Catalogues
      description: Finds catalogues available to the user
      operationId: findCataloguesForUser
      parameters:
        - name: installationId
          in: path
          description: The id of the specific installation of the Spectacular app
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindCataloguesResult'
  /catalogues/{installationId}/{encodedId}:
    get:
      tags:
        - Catalogues
      description: Gets a catalogue
      operationId: getCatalogue
      parameters:
        - name: installationId
          in: path
          description: The id of the specific installation of the Spectacular app
          required: true
          schema:
            type: integer
        - name: encodedId
          in: path
          description: The base64 encoded id of the Catalogue being fetched
          required: true
          schema:
            type: string
            format: byte
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogueResult'
        '404':
          description: Not Found result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
  /catalogues/{installationId}/{encodedId}/interfaces/{interfaceName}:
    get:
      tags:
        - Interfaces
      description: Gets the details of an interface
      operationId: getInterfaceDetails
      parameters:
        - name: installationId
          in: path
          description: The id of the specific installation of the Spectacular app
          required: true
          schema:
            type: integer
        - name: encodedId
          in: path
          description: The base64 encoded id of the Catalogue being referenced
          required: true
          schema:
            type: string
            format: byte
        - name: interfaceName
          in: path
          description: The name of the Interface in the Catalogue being referenced
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterfaceResult'
        '404':
          description: Not Found result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
  /catalogues/{installationId}/{encodedId}/interfaces/{interfaceName}/file:
    get:
      tags:
        - Interfaces
      description: Gets the file contents of an interface
      operationId: getInterfaceFileContents
      parameters:
        - name: installationId
          in: path
          description: The id of the specific installation of the Spectacular app
          required: true
          schema:
            type: integer
        - name: encodedId
          in: path
          description: The base64 encoded id of the Catalogue being referenced
          required: true
          schema:
            type: string
            format: byte
        - name: interfaceName
          in: path
          description: The name of the Interface in the Catalogue being referenced
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: The branch or tag ref to take the interface from
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/*:
              schema:
                type: object
            text/plain:
              schema:
                type: object
components:
  schemas:
    NotFoundResponse:
      type: string
    AppDetails:
      type: object
      properties:
        clientId:
          type: string
      required:
        - clientId
    UserDetails:
      type: object
      properties:
        username:
          type: string
        fullName:
          type: string
        profileImageUrl:
          type: string
      required:
        - username
    AppLoginRequest:
      type: object
      properties:
        userCode:
          type: string
      required:
        - userCode
    GetInstallationsResult:
      type: object
      properties:
        installations:
          type: array
          items:
            $ref: '#/components/schemas/Installation'
      required:
        - installations
    Installation:
      type: object
      properties:
        id:
          type: integer
        owner:
          type: string
        ownerImageUrl:
          type: string
      required:
        - id
        - owner
    FindCataloguesResult:
      type: object
      properties:
        catalogues:
          type: array
          items:
            $ref: '#/components/schemas/Catalogue'
      required:
        - catalogues
    GetCatalogueResult:
      type: object
      properties:
        catalogue:
            $ref: '#/components/schemas/Catalogue'
      required:
        - catalogue
    Catalogue:
      type: object
      properties:
        fullPath:
          type: string
        name:
          type: string
        encodedId:
          type: string
          format: byte
        htmlUrl:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        parseError:
          type: string
        interfaceCount:
          type: integer
        specEvolutionSummaries:
          type: array
          items:
            $ref: '#/components/schemas/SpecEvolutionSummary'
        topics:
          type: array
          items:
            type: string
      required:
        - fullPath
        - name
      x-keys:
        - fullPath
        - name
    GetInterfaceResult:
      type: object
      properties:
        interfaceName:
          type: string
        parseError:
          type: string
        catalogue:
            $ref: '#/components/schemas/Catalogue'
        specEvolutionSummary:
            $ref: '#/components/schemas/SpecEvolutionSummary'
        specEvolution:
            $ref: '#/components/schemas/SpecEvolution'
      required:
        - interfaceName
        - catalogue
        - specEvolutionSummary
        - specEvolution
    SpecEvolutionSummary:
      type: object
      properties:
        interfaceName:
          type: string
        latestAgreed:
          $ref: '#/components/schemas/SpecItem'
        upcomingReleaseCount:
          type: integer
        proposedChangesCount:
          type: integer
        agreedVersionTagCount:
          type: integer
      required:
        - interfaceName
        - upcomingReleaseCount
        - proposedChangesCount
        - agreedVersionTagCount
    SpecEvolution:
      type: object
      properties:
        interfaceName:
          type: string
        configUsed:
          type: object
        main:
          $ref: '#/components/schemas/EvolutionBranch'
        releases:
          type: array
          items:
            $ref: '#/components/schemas/EvolutionBranch'
      required:
        - interfaceName
        - main
        - releases
    EvolutionBranch:
      type: object
      properties:
        branchName:
          type: string
        evolutionItems:
          type: array
          items:
            $ref: '#/components/schemas/EvolutionItem'
      required:
        - branchName
        - evolutionItems
    EvolutionItem:
      type: object
      properties:
        ref:
          type: string
        tags:
          description: The associated to this commit.
          type: array
          items:
            type: string
        branchName:
          type: string
          description: If the evolution item represents the head of a branch, the name of the branch is returned.
        specItem:
          description: The spec file item at this commit.
          $ref: '#/components/schemas/SpecItem'
        pullRequest:
          $ref: '#/components/schemas/PullRequest'
      required:
        - ref
        - tags
    SpecItem:
      type: object
      properties:
        id:
          type: string
        fullPath:
          type: string
        htmlUrl:
          type: string
          format: uri
        ref:
          type: string
        sha:
          type: string
        lastModified:
          type: string
          format: date-time
        parseResult:
          $ref: '#/components/schemas/OpenApiSpecParseResult'
      required:
        - id
        - fullPath
        - ref
    OpenApiSpecParseResult:
      type: object
      properties:
        openApiSpec:
          $ref: '#/components/schemas/OpenApiSpec'
        errors:
          type: array
          items:
            type: string
      required:
        - openApiSpec
        - errors
    OpenApiSpec:
      type: object
      properties:
        title:
          type: string
        version:
          type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiOperation'
      required:
        - title
        - version
        - operations
    OpenApiOperation:
      type: object
      properties:
        path:
          type: string
        name:
          type: string
      required:
        - path
        - name
    PullRequest:
      type: object
      properties:
        number:
          type: integer
        url:
          type: string
          format: uri
        title:
          type: string
        branchName:
          type: string
        updatedAt:
          type: string
          format: date-time
        labels:
          type: array
          items:
            type: string
      required:
        - number
        - branchName
