id: https://spectacular/0.1/catalogue-manifest
$schema: http://json-schema.org/draft-04/schema#
description: Validation schema for Catalogue Manifest File v0.2.
type: object
properties:
  spectacular:
    type: string
    pattern: ^0\.1?(-.+)?$
  catalogues:
    type: object
    additionalProperties: 
      $ref: '#/definitions/Catalogue'
required:
  - spectacular
definitions:
  Catalogue:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      interfaces:
        type: object
        additionalProperties: 
          $ref: '#/definitions/Interface'
    required:
      - title
  Interface:
    type: object
    properties:
      specFile:
        $ref: '#/definitions/SpecFileLocation'
      specEvolutionConfig:
        $ref: '#/definitions/SpecEvolutionConfig'
    required:
      - specFile
  SpecFileLocation:
    type: object
    properties:
      filePath:
        type: string
      repo:
        type: string
        pattern: ^[^\/]+\/[^\/]+$
    required:
      - filePath
  SpecEvolutionConfig:
    type: object
    description: Config for determining what git data can be used to generate an evolutionary view of the interface's spec file.
    properties:
      mainBranchConfig:
        description: Configuration capturing the what branch is used to hold the latest agreed release of the specification file. If not set, defaults are used.
        type: object
        properties:
          branchName:
            description: The name of the branch that holds the latest agreed release of the specification file. If not set, the name `main` is assumed.
            type: string
      releaseTagConfig:
        description: Configuration capturing the tagging convention used to tag the finalised releases of the specification file. If not set, all tags are returned.
        type: object
        properties:
          tagPrefix:
            description: The prefix used to select which tags should be included as version milestones for the spec file. The rest of the branch name should conform to the versioning convention used. If not set, all tags are returned.
            type: string
          # versioningConvention:
          #   type: string
          #   description: Defaults to `semver`.
          #   enum:
          #     - semver
      releaseBranchConfig:
        description: Configuration capturing the branching conventions used to draft new releases of the specification file. If not set, no release branches are returned.
        type: object
        properties:
          branchPrefix:
            description: The prefix used to select which branches should be included as draft release branches for the spec file. The rest of the branch name should conform to the versioning convention used. If not set, no release branches are returned.
            type: string
          # versioningConvention:
          #   type: string
          #   description: Defaults to `majorMinorVersioned`.
          #   enum:
          #     - majorMinorVersioned
