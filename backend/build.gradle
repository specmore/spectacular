buildscript {
	repositories {
		mavenCentral()
	}
	ext {
		springBootVersion = '2.2.2.RELEASE'
		js2pVersion = '1.0.2'
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:${js2pVersion}"
	}
}

plugins {
	id 'checkstyle'
	id "org.openapi.generator" version "4.3.1"
}

repositories {
	mavenCentral()
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jsonschema2pojo'

group = 'spectacular'
sourceCompatibility = '11'

ext {
	catalogueManifestModelsDir = file("${project.buildDir}/generated-sources/catalogue-manifest")
	apiModelsDir = file("${project.buildDir}/generated-sources/api-models")
}

bootJar {
	archiveVersion = ''
}

springBoot {
	buildInfo()
}

jsonSchema2Pojo {
	source = files("specs/catalogue-manifest.yaml")
	targetDirectory = catalogueManifestModelsDir
	targetPackage = "spectacular.backend.cataloguemanifest.model"
	includeAdditionalProperties = true
	includeJsr303Annotations = true
	generateBuilders = true
	sourceType = 'yamlschema'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = file("specs/backend-api.yaml").toString()
	outputDir = apiModelsDir.toString()
	modelPackage = "spectacular.backend.api.model"
	modelFilesConstrainedTo = [
			"Error"
	]
	configOptions = [
			dateLibrary: "java8",
			sourceFolder: ""
	]
	systemProperties = [
	        models: ""
	]
}

sourceSets {
	main {
		java {
			srcDirs += apiModelsDir
		}
	}
}

compileJava.dependsOn tasks.openApiGenerate

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.apache.httpcomponents:httpclient'
	implementation 'org.apache.httpcomponents:httpclient-cache'
	implementation 'com.nimbusds:nimbus-jose-jwt:8.2.1'
	implementation 'org.bouncycastle:bcpkix-jdk15on:1.64'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//groovy + spock
	implementation "org.codehaus.groovy:groovy-all:2.5.7"
	testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
	testImplementation "org.spockframework:spock-spring:1.3-groovy-2.5"

	// plantuml generation
	implementation group: 'ch.ifocusit', name: 'plantuml-builder', version: '1.3'

	// openapi-generator
	implementation 'io.swagger:swagger-annotations:1.5.24'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
}
